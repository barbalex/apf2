query QkQuery(
  $berichtjahr: Int
  $isBerichtjahr: Boolean!
  $projId: UUID!
  $apId: UUID!
) {
  projektById(id: $projId) {
    id
    name
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId {
          nodes {
            id
            tpopsByPopId(filter: {x: {isNull: false}, y: {isNull: false}}) {
              nodes {
                id
                nr
                flurname
                x
                y
                apberRelevant
                popByPopId {
                  id
                  nr
                  name
                }
              }
            }
          }
        }
        aeEigenschaftenByArtId {
          id
          artname
        }
      }
    }
  }
  zielOhneJahr: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        zielsByApId(filter: {or: [{jahr: {equalTo: 1}}, {jahr: {isNull: true}}]}) {
          nodes {
            id
            jahr
          }
        }
      }
    }
  }
  zielOhneTyp: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        zielsByApId(filter: {typ: {isNull: true}}) {
          nodes {
            id
            jahr
          }
        }
      }
    }
  }
  zielOhneZiel: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        zielsByApId(filter: {bezeichnung: {isNull: true}}) {
          nodes {
            id
            jahr
          }
        }
      }
    }
  }
  zielberOhneJahr: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        zielsByApId {
          nodes {
            id
            jahr
            zielbersByZielId(filter: {jahr: {isNull: true}}) {
              nodes {
                id
                zielByZielId {
                  id
                  jahr
                }
              }
            }
          }
        }
      }
    }
  }
  zielberOhneEntwicklung: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        zielsByApId {
          nodes {
            id
            jahr
            zielbersByZielId(filter: {erreichung: {isNull: true}}) {
              nodes {
                id
                zielByZielId {
                  id
                  jahr
                }
              }
            }
          }
        }
      }
    }
  }
  erfkritOhneBeurteilung: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        erfkritsByApId(filter: {erfolg: {isNull: true}}, orderBy: ID_ASC) {
          nodes {
            id
          }
        }
      }
    }
  }
  erfkritOhneKriterien: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        erfkritsByApId(filter: {kriterien: {isNull: true}}, orderBy: ID_ASC) {
          nodes {
            id
          }
        }
      }
    }
  }
  apberOhneJahr: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        apbersByApId(filter: {jahr: {isNull: true}}, orderBy: ID_ASC) {
          nodes {
            id
          }
        }
      }
    }
  }
  apberOhneVergleichVorjahrGesamtziel: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        apbersByApId(filter: {vergleichVorjahrGesamtziel: {isNull: true}}, orderBy: ID_ASC) {
          nodes {
            id
          }
        }
      }
    }
  }
  apberOhneBeurteilung: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        apbersByApId(filter: {beurteilung: {isNull: true}}, orderBy: ID_ASC) {
          nodes {
            id
          }
        }
      }
    }
  }
  assozartOhneArt: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        assozartsByApId(filter: {aeId: {isNull: true}}) {
          nodes {
            id
          }
        }
      }
    }
  }
  popOhneNr: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId(filter: {nr: {isNull: true}}) {
          nodes {
            id
            name
          }
        }
      }
    }
  }
  popOhneName: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId(filter: {name: {isNull: true}}) {
          nodes {
            id
            nr
          }
        }
      }
    }
  }
  popOhneStatus: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId(filter: {status: {isNull: true}}) {
          nodes {
            id
            nr
          }
        }
      }
    }
  }
  popOhneBekanntSeit: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId(filter: {bekanntSeit: {isNull: true}}) {
          nodes {
            id
            nr
          }
        }
      }
    }
  }
  popOhneKoord: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId(filter: {or: [{x: {isNull: true}}, {y: {isNull: true}}]}) {
          nodes {
            id
            nr
          }
        }
      }
    }
  }
  # need to filter totalCount = 0 from this result
  popOhneTpop: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId {
          nodes {
            id
            nr
            tpopsByPopId {
              totalCount
            }
          }
        }
      }
    }
  }
  popMitStatusUnklarOhneBegruendung: projektById(id: $projId) {
    id
    apsByProjId(filter: {id: {equalTo: $apId}}) {
      nodes {
        id
        popsByApId(filter: {
          statusUnklar: {equalTo: true},
          statusUnklarBegruendung: {isNull: true}
        }) {
          nodes {
            id
            nr
          }
        }
      }
    }
  }
  popMitMehrdeutigerNr: allVQPopPopnrmehrdeutigs {
    nodes {
      projId
      apId
      id
      nr
    }
  }
  popOhnePopber: qPopOhnePopber(berichtjahr: $berichtjahr, apid: $apId, projid: $projId) @include(if: $isBerichtjahr) {
    nodes {
      projId
      apId
      id
      nr
    }
  }
  # Bericht-Stati kontrollieren
  popMitBerZunehmendOhneTpopberZunehmend: allVQPopMitBerZunehmendOhneTpopberZunehmends(filter: {
      projId: {equalTo: $projId},
      apId: {equalTo: $apId},
      berichtjahr: {equalTo: $berichtjahr}
    })
    @include(if: $isBerichtjahr) {
    nodes {
      projId
      apId
      id
      nr
      berichtjahr
    }
  }
  popMitBerAbnehmendOhneTpopberAbnehmend: allVQPopMitBerAbnehmendOhneTpopberAbnehmends(filter: {
      projId: {equalTo: $projId},
      apId: {equalTo: $apId},
      berichtjahr: {equalTo: $berichtjahr}
    })
    @include(if: $isBerichtjahr) {
    nodes {
      projId
      apId
      id
      nr
      berichtjahr
    }
  }
  popMitBerErloschenOhneTpopberErloschen: allVQPopMitBerErloschenOhneTpopberErloschens(filter: {
      projId: {equalTo: $projId},
      apId: {equalTo: $apId},
      berichtjahr: {equalTo: $berichtjahr}
    })
    @include(if: $isBerichtjahr) {
    nodes {
      projId
      apId
      id
      nr
      berichtjahr
    }
  }
  popMitBerErloschenUndTpopberNichtErloschen: allVQPopMitBerErloschenUndTpopberNichtErloschens(filter: {
      projId: {equalTo: $projId},
      apId: {equalTo: $apId},
      berichtjahr: {equalTo: $berichtjahr}
    })
    @include(if: $isBerichtjahr) {
    nodes {
      projId
      apId
      id
      nr
      berichtjahr
    }
  }
  popOhneTpopMitGleichemStatus: allVQPopOhnetpopmitgleichemstatuses(filter: {
      projId: {equalTo: $projId},
      apId: {equalTo: $apId}
    }) {
    nodes {
      projId
      apId
      id
      nr
    }
  }
}