query TreeDataQuery(
  $projId: UUID!
  $isProjekt: Boolean!
  $ap: [UUID!]
  $apId: UUID
  $isAp: Boolean!
  $apIsActiveInMap: Boolean!
) {
  beobZugeordnetForMap: allVApbeobs(
    filter: {
      apId: { in: $ap }
      nichtZuordnen: { equalTo: false }
      tpopId: { isNull: false }
    }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      x
      y
    }
  }
  beobZugeordnetForMapMarkers: projektById(id: $projId)
    @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: false }
                  nichtZuordnen: { equalTo: false }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                  tpopByTpopId {
                    id
                    nr
                    flurname
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  beobNichtBeurteiltForMapMarkers: projektById(id: $projId)
    @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: true }
                  nichtZuordnen: { equalTo: false }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  beobNichtZuzuordnenForMapMarkers: projektById(id: $projId)
    @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: true }
                  nichtZuordnen: { equalTo: true }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  beobZugeordnetAssignPolylinesForMap: allVApbeobs(
    filter: {
      apId: { in: $ap }
      nichtZuordnen: { equalTo: false }
      tpopId: { isNull: false }
    }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      x
      y
    }
  }
  popForMapMarkers: projektById(id: $projId) @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        popsByApId(filter: { x: { isNull: false }, y: { isNull: false } }) {
          nodes {
            id
            apId
            nr
            name
            status
            statusUnklar
            statusUnklarBegruendung
            bekanntSeit
            x
            y
          }
        }
      }
    }
  }
  beobAssignLines: projektById(id: $projId) @include(if: $isProjekt) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) @include(if: $isAp) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: false }
                  nichtZuordnen: { equalTo: false }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                  tpopByTpopId {
                    id
                    popId
                    nr
                    flurname
                    x
                    y
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
