query TreeDataQuery(
  $projId: UUID!
  $isProjekt: Boolean!
  $ap: [UUID!]
  $apId: UUID
  $isAp: Boolean!
  $ziel: [UUID!]
  $isZiel: Boolean!
  $apIsActiveInMap: Boolean!
) {
  zielbers: allZielbers(filter: { zielId: { in: $ziel } }, orderBy: JAHR_ASC)
    @include(if: $isZiel) {
    nodes {
      id
      zielId
      jahr
      erreichung
    }
  }
  erfkrits: allErfkrits(filter: { apId: { in: $ap } }) @include(if: $isAp) {
    nodes {
      id
      apId
      kriterien
      erfolg
      apErfkritWerteByErfolg {
        id
        text
        sort
      }
    }
  }
  apbers: allApbers(filter: { apId: { in: $ap } }, orderBy: JAHR_ASC)
    @include(if: $isAp) {
    nodes {
      id
      apId
      jahr
    }
  }
  bers: allBers(filter: { apId: { in: $ap } }, orderBy: JAHR_ASC)
    @include(if: $isAp) {
    nodes {
      id
      apId
      jahr
      titel
    }
  }
  idealbiotops: allIdealbiotops(filter: { apId: { in: $ap } })
    @include(if: $isAp) {
    nodes {
      id
      apId
    }
  }
  aparts: allAparts(filter: { apId: { in: $ap } }) @include(if: $isAp) {
    nodes {
      id
      apId
      aeEigenschaftenByArtId {
        id
        artname
      }
    }
  }
  assozarts: allAssozarts(filter: { apId: { in: $ap } }) @include(if: $isAp) {
    nodes {
      id
      apId
      aeId
      aeEigenschaftenByAeId {
        id
        artname
      }
    }
  }
  ekfzaehleinheits: allEkfzaehleinheits(filter: { apId: { in: $ap } })
    @include(if: $isAp) {
    nodes {
      id
      apId
      zaehleinheitId
      bemerkungen
      tpopkontrzaehlEinheitWerteByZaehleinheitId {
        id
        text
      }
    }
  }
  beobNichtBeurteilts: allVApbeobs(
    filter: {
      nichtZuordnen: { equalTo: false }
      apId: { in: $ap }
      tpopId: { isNull: true }
    }
    orderBy: DATUM_DESC
  ) @include(if: $isAp) {
    nodes {
      id
      apId
      nichtZuordnen
      artId
      datum
      autor
      quelle
    }
  }
  beobNichtZuzuordnens: allVApbeobs(
    filter: { nichtZuordnen: { equalTo: true }, apId: { in: $ap } }
    orderBy: DATUM_DESC
  ) @include(if: $isAp) {
    nodes {
      id
      apId
      nichtZuordnen
      artId
      datum
      autor
      quelle
    }
  }
  # these are used in Rows
  # to extract data for map layers
  popForMap: allPops(
    filter: { apId: { in: $ap }, x: { isNull: false }, y: { isNull: false } }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      apId
      nr
      name
      status
      statusUnklar
      statusUnklarBegruendung
      bekanntSeit
      x
      y
      tpopsByPopId(filter: { x: { isNull: false }, y: { isNull: false } }) {
        nodes {
          id
          x
          y
        }
      }
    }
  }
  # this one is used to refetch data when new tpop was localized
  # so that the new marker appears on map
  tpopForMap: projektById(id: $projId) @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        popsByApId {
          nodes {
            id
            id
            apId
            nr
            name
            status
            statusUnklar
            statusUnklarBegruendung
            bekanntSeit
            x
            y
            tpopsByPopId(
              filter: { x: { isNull: false }, y: { isNull: false } }
            ) {
              nodes {
                id
                popId
                nr
                gemeinde
                flurname
                x
                y
                radius
                hoehe
                exposition
                klima
                neigung
                beschreibung
                katasterNr
                status
                statusUnklar
                statusUnklarGrund
                apberRelevant
                bekanntSeit
                eigentuemer
                kontakt
                nutzungszone
                bewirtschafter
                bewirtschaftung
                bemerkungen
                popByPopId {
                  id
                  nr
                  name
                }
              }
            }
          }
        }
      }
    }
  }
  beobNichtBeurteiltForMap: allVApbeobs(
    filter: {
      apId: { in: $ap }
      nichtZuordnen: { equalTo: false }
      tpopId: { isNull: true }
    }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      x
      y
    }
  }
  beobNichtZuzuordnenForMap: allVApbeobs(
    filter: { apId: { in: $ap }, nichtZuordnen: { equalTo: true } }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      x
      y
    }
  }
  beobZugeordnetForMap: allVApbeobs(
    filter: {
      apId: { in: $ap }
      nichtZuordnen: { equalTo: false }
      tpopId: { isNull: false }
    }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      x
      y
    }
  }
  beobZugeordnetForMapMarkers: projektById(id: $projId)
    @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: false }
                  nichtZuordnen: { equalTo: false }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                  tpopByTpopId {
                    id
                    nr
                    flurname
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  beobNichtBeurteiltForMapMarkers: projektById(id: $projId)
    @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: true }
                  nichtZuordnen: { equalTo: false }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  beobNichtZuzuordnenForMapMarkers: projektById(id: $projId)
    @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: true }
                  nichtZuordnen: { equalTo: true }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  beobZugeordnetAssignPolylinesForMap: allVApbeobs(
    filter: {
      apId: { in: $ap }
      nichtZuordnen: { equalTo: false }
      tpopId: { isNull: false }
    }
  ) @include(if: $apIsActiveInMap) {
    nodes {
      id
      x
      y
    }
  }
  popForMapMarkers: projektById(id: $projId) @include(if: $apIsActiveInMap) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) {
      nodes {
        id
        popsByApId(filter: { x: { isNull: false }, y: { isNull: false } }) {
          nodes {
            id
            apId
            nr
            name
            status
            statusUnklar
            statusUnklarBegruendung
            bekanntSeit
            x
            y
          }
        }
      }
    }
  }
  beobAssignLines: projektById(id: $projId) @include(if: $isProjekt) {
    id
    apsByProjId(filter: { id: { equalTo: $apId } }) @include(if: $isAp) {
      nodes {
        id
        apartsByApId {
          nodes {
            id
            artId
            aeEigenschaftenByArtId {
              id
              beobsByArtId(
                filter: {
                  tpopId: { isNull: false }
                  nichtZuordnen: { equalTo: false }
                  x: { isNull: false }
                  y: { isNull: false }
                }
              ) {
                nodes {
                  id
                  autor
                  datum
                  beobQuelleWerteByQuelleId {
                    id
                    name
                  }
                  x
                  y
                  aeEigenschaftenByArtId {
                    id
                    artname
                  }
                  tpopByTpopId {
                    id
                    popId
                    nr
                    flurname
                    x
                    y
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
