# name: apf
services:
  db:
    # specify container name to make it easier to run commands
    container_name: apf_db
    restart: always
    # image: db
    # ensure enough shared memory - docker only allows 64mb
    # https://stackoverflow.com/a/56754077/712005
    shm_size: 1g
    build:
      context: ./db
    env_file:
      - ./.env
    networks:
      - network
    expose:
      - '5432'
    ports:
      # make the Postgres database accessible from outside the Docker container on port 5432
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
      - sik_data:/sik_data
  graphql:
    container_name: apf_graphql
    restart: unless-stopped
    build:
      context: ./graphql
    networks:
      - network
    expose:
      - '5000'
    ports:
      - '5000:5000'
    depends_on:
      - db
    env_file:
      - ./.env
    command: [
        '--connection',
        '${DATABASE_URL}',
        '--schema',
        'apflora',
        '--append-plugins',
        'postgraphile-plugin-connection-filter,@graphile-contrib/pg-order-by-related,@graphile/postgis,postgraphile-plugin-connection-filter-postgis',
        '--jwt-token-identifier',
        'auth.jwt_token',
        '--default-role',
        'postgres',
        '--jwt-secret',
        '${JWT_SECRET}',
        '--body-size-limit',
        '2MB',
        '--cors',
        '--disable-query-log',
        '--enable-query-batching',
        '--retry-on-init-fail',
        '--enhance-graphiql',
        # enable exporting schema for apollo, only in dev
        # '--export-schema-json',
        # '/my_data/schema.json',
      ]
volumes:
  db_data:
  sik_data:
networks:
  network:
